//============================================================================
// Name        : test.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <cstdlib>
#include <cstring>

#ifdef _WIN32
#include <windows.h>
#else
#include <unistd.h>
#include <sys/wait.h>
#endif

void method2() {
    std::cout << "Method 2: system()" << std::endl;
    system("ping -c 1 8.8.8.8 > output.txt");
    system("cat output.txt");
}

void method3() {
    std::cout << "Method 3: ShellExecute()" << std::endl;

#ifdef _WIN32
    ShellExecuteW(NULL, L"open", L"cmd.exe", L"/C ping -n 1 8.8.8.8 > output.txt", NULL, SW_HIDE);
#else
    std::cout << "Method 3 is not implemented for non-Windows platforms." << std::endl;
#endif
}

void method4() {
    std::cout << "Method 4: CreateProcess()" << std::endl;

#ifdef _WIN32
    STARTUPINFOW si;
    PROCESS_INFORMATION pi;
    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);
    ZeroMemory(&pi, sizeof(pi));

    if (CreateProcessW(NULL, L"ping -n 1 8.8.8.8 > output.txt", NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {
        WaitForSingleObject(pi.hProcess, INFINITE);
        CloseHandle(pi.hProcess);
        CloseHandle(pi.hThread);
    } else {
        std::cerr << "CreateProcess failed (" << GetLastError() << ")." << std::endl;
    }
#else
    std::cout << "Method 4 is not implemented for non-Windows platforms." << std::endl;
#endif
}

int main() {
    method2();
    method3();
    method4();

    return 0;
}
