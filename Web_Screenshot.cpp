#include <iostream>
#include <string>
#include <locale>
#include <codecvt>
#include <cstdlib>
#include <unistd.h>  // For sleep function

int main()
{
    std::wstring url = L"https://www.google.com"; // Hardcoded URL
    std::wstring file_name = L""; // Save to the desktop

    const char *homeDir = std::getenv("HOME");
    if (homeDir != nullptr) {
        std::wstring_convert<std::codecvt_utf8<wchar_t>> converter;
        file_name = converter.from_bytes(homeDir) + L"/Desktop/screenshot.pdf";
    } else {
        std::wcerr << L"Failed to determine home directory." << std::endl;
        return 1;
    }

    try
    {
        // Launch Chrome in headless mode
        std::wstring command = L"google-chrome --headless --disable-gpu --print-to-pdf=" + file_name + L" " + url;
        std::wcout << L"Running command: " << command << std::endl;

        // Execute the command
        int result = std::system(std::wstring_convert<std::codecvt_utf8<wchar_t>>().to_bytes(command).c_str());

        if (result == 0)
        {
            // Wait for Chrome to create the PDF file (adjust sleep duration as needed)
            sleep(5);

            // Rename the PDF file
            std::wstring_convert<std::codecvt_utf8<wchar_t>> converter;  // Declare converter here
            std::string old_name = converter.to_bytes(L"screenshot.pdf");
            std::string new_name = converter.to_bytes(file_name);
            std::rename(old_name.c_str(), new_name.c_str());

            std::wcout << L"PDF saved to " << file_name << std::endl;
        }
        else
        {
            std::wcerr << L"Failed to capture PDF." << std::endl;
        }
    }
    catch (std::exception &e)
    {
        std::cerr << "Exception: " << e.what() << std::endl;
    }

    return 0;
}