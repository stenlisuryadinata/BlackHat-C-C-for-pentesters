#include <iostream>
#include <cstring>
#include <unistd.h>
#include <arpa/inet.h>

int main() 
{
    std::string destination_ip = "127.0.0.1"; //Hardcoded destination IP address
    unsigned short destination_port = 8080; //Hardcoded destination port 

    // Create a TCP socket
    int socket_fd = socket(AF_INET, SOCK_STREAM, 0);
    if(socket_fd == -1) {
        perror("Error creating Socket");
        return 1;
    }
    //Set the destination address and port 
    sockaddr_in dest_addr;
    std::memset(&dest_addr, 0, sizeof(dest_addr));
    dest_addr.sin_family = AF_INET;
    dest_addr.sin_port = htons(destination_port);

    //Convert the destination IP address to binary form 
    if (inet_pton(AF_INET, destination_ip.c_str(), &(dest_addr.sin_addr))<= 0) {
        perror("Error converting IP address");
        close(socket_fd);
        return 1;
    }

    //Connect to the destination IP address and port 
    if (connect(socket_fd, (struct sockaddr*)&dest_addr, sizeof(dest_addr)) <= -1) {
        perror("Error connecting"); 
        close(socket_fd);
        return 1;
    }

    //Print a message indicating that the port is open 
    std::cout << destination_ip << ":" << destination_port << " is open." << std::endl;

    //close the socket 
    close(socket_fd);
    return 0;

}